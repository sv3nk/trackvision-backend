CREATE OR REPLACE
ALGORITHM = UNDEFINED VIEW `view_plastics_epc_events` (`id`,
`event_id`,
`event_type`,
`action`,
`biz_step`,
`disposition`,
`record_time`,
`event_time`,
`event_time_zone_offset`,
`transformation_id`,
`biz_location_id_raw`,
`biz_location_join_key`,
`read_point_id_raw`,
`read_point_join_key`,
`epc_id_raw`,
`epc_type`,
`epc_rel_type`,
`epc_join_key`,
`quantity`,
`uom`,
`product_join_key`,
`lot_number`,
`serial`,
`sscc`,
`grai`,
`giai`,
`parent_id_raw`,
`parent_join_key`,
`ilmd`,
`ilmd_lot_number`,
`ilmd_item_expiration_date`,
`ilmd_best_before_date`,
`ilmd_sell_by_date`,
`lgtin_join_key`,
`persistent_disposition_set`,
`persistent_disposition_unset`,
`biz_transaction_list`,
`biz_transaction_po_id`,
`biz_transaction_desadv_id`,
`source_location_id_raw`,
`source_location_join_key`,
`source_owning_party_id_raw`,
`source_owning_party_join_key`,
`source_possessing_party_id_raw`,
`source_possessing_party_join_key`,
`destination_location_id_raw`,
`destination_location_join_key`,
`destination_owning_party_id_raw`,
`destination_owning_party_join_key`,
`destination_possessing_party_id_raw`,
`destination_possessing_party_join_key`,
`inferred`,
`parent_event_id`,
`density_value`,
`density_unit_code`,
`content_of_packaging`,
`package_type`,
`surface_weight_value`,
`surface_weight_unit`,
`food_approval`,
`biodegradability`,
`color_code`,
`color_code_list`,
`production_step`,
`mfr_value`,
`mfr_uom`,
`mfr_norm`,
`mfr_condition`) AS
SELECT
    `e`.`id` AS `id`,
    `e`.`event_id` AS `event_id`,
    `e`.`event_type` AS `event_type`,
    `e`.`action` AS `action`,
    `e`.`biz_step` AS `biz_step`,
    `e`.`disposition` AS `disposition`,
    `e`.`record_time` AS `record_time`,
    `e`.`event_time` AS `event_time`,
    `e`.`event_time_zone_offset` AS `event_time_zone_offset`,
    `e`.`transformation_id` AS `transformation_id`,
    `e`.`biz_location_id_raw` AS `biz_location_id_raw`,
    `e`.`biz_location_join_key` AS `biz_location_join_key`,
    `e`.`read_point_id_raw` AS `read_point_id_raw`,
    `e`.`read_point_join_key` AS `read_point_join_key`,
    `e`.`epc_id_raw` AS `epc_id_raw`,
    `e`.`epc_type` AS `epc_type`,
    `e`.`epc_rel_type` AS `epc_rel_type`,
    `e`.`epc_join_key` AS `epc_join_key`,
    `e`.`quantity` AS `quantity`,
    `e`.`uom` AS `uom`,
    `e`.`product_join_key` AS `product_join_key`,
    `e`.`lot_number` AS `lot_number`,
    `e`.`serial` AS `serial`,
    `e`.`sscc` AS `sscc`,
    `e`.`grai` AS `grai`,
    `e`.`giai` AS `giai`,
    `e`.`parent_id_raw` AS `parent_id_raw`,
    `e`.`parent_join_key` AS `parent_join_key`,
    `e`.`ilmd` AS `ilmd`,
    `e`.`ilmd_lot_number` AS `ilmd_lot_number`,
    `e`.`ilmd_item_expiration_date` AS `ilmd_item_expiration_date`,
    `e`.`ilmd_best_before_date` AS `ilmd_best_before_date`,
    `e`.`ilmd_sell_by_date` AS `ilmd_sell_by_date`,
    `e`.`lgtin_join_key` AS `lgtin_join_key`,
    `e`.`persistent_disposition_set` AS `persistent_disposition_set`,
    `e`.`persistent_disposition_unset` AS `persistent_disposition_unset`,
    `e`.`biz_transaction_list` AS `biz_transaction_list`,
    `e`.`biz_transaction_po_id` AS `biz_transaction_po_id`,
    `e`.`biz_transaction_desadv_id` AS `biz_transaction_desadv_id`,
    `e`.`source_location_id_raw` AS `source_location_id_raw`,
    `e`.`source_location_join_key` AS `source_location_join_key`,
    `e`.`source_owning_party_id_raw` AS `source_owning_party_id_raw`,
    `e`.`source_owning_party_join_key` AS `source_owning_party_join_key`,
    `e`.`source_possessing_party_id_raw` AS `source_possessing_party_id_raw`,
    `e`.`source_possessing_party_join_key` AS `source_possessing_party_join_key`,
    `e`.`destination_location_id_raw` AS `destination_location_id_raw`,
    `e`.`destination_location_join_key` AS `destination_location_join_key`,
    `e`.`destination_owning_party_id_raw` AS `destination_owning_party_id_raw`,
    `e`.`destination_owning_party_join_key` AS `destination_owning_party_join_key`,
    `e`.`destination_possessing_party_id_raw` AS `destination_possessing_party_id_raw`,
    `e`.`destination_possessing_party_join_key` AS `destination_possessing_party_join_key`,
    `e`.`inferred` AS `inferred`,
    `e`.`parent_event_id` AS `parent_event_id`,
    CAST(NULLIF(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."example:density"."example:value"'), _UTF8MB4'null') AS DECIMAL(10, 3)) AS `density_value`,
    JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."example:density"."example:unitCode"')) AS `density_unit_code`,
    JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."example:contentOfPackaging"')) AS `content_of_packaging`,
    JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."example:packageType"')) AS `package_type`,
    CAST(NULLIF(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."example:surfaceWeight"."example:value"'), _UTF8MB4'null') AS DECIMAL(10, 3)) AS `surface_weight_value`,
    JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."example:surfaceWeight"."example:unitCode"')) AS `surface_weight_unit`,
    CASE
        WHEN JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$."example:foodApproval"'))= _UTF8MB4'true' THEN 1
        WHEN JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$."example:foodApproval"'))= _UTF8MB4'false' THEN 0
        ELSE NULL
    END AS `food_approval`,
    CASE
        WHEN JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$."example:biodegradability"'))= _UTF8MB4'true' THEN 1
        WHEN JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$."example:biodegradability"'))= _UTF8MB4'false' THEN 0
        ELSE NULL
    END AS `biodegradability`,
    JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$."example:ColourOfBasicMaterial"."example:colourCodeValue"')) AS `color_code`,
    JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$."example:ColourOfBasicMaterial"."example:colourCodeListCode"')) AS `color_code_list`,
    JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."rcycle:productionStep"')) AS `production_step`,
    JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."rcycle:mfr"."rcycle:value"')) AS `mfr_value`,
    JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."rcycle:mfr"."rcycle:uom"')) AS `mfr_uom`,
    JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."rcycle:mfr"."rcycle:norm"')) AS `mfr_norm`,
    JSON_UNQUOTE(JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."rcycle:mfr"."rcycle:condition"')) AS `mfr_condition`
FROM
    `data`.`epc_events` AS `e`
LEFT JOIN `data`.`epcis_events_raw` AS `er` ON
    `e`.`event_id` = `er`.`event_id`
WHERE
    JSON_EXTRACT(`er`.`event_body`, _UTF8MB4'$.ilmd."rcycle:productionStep"') IS NOT NULL;


-- `data`.view_plastics_epcs source